{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "react-app-rewired build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files"
    },
    "dev": {
      "name": "dev",
      "description": "Starts the react application",
      "env": {
        "ESLINT_NO_DEV_ERRORS": "true",
        "TSC_COMPILE_ON_ERROR": "true"
      },
      "steps": [
        {
          "exec": "react-app-rewired start"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx ${CI:-'--fix'} --no-error-on-unmatched-pattern src test",
          "receiveArgs": true
        }
      ]
    },
    "eslint-staged": {
      "name": "eslint-staged",
      "description": "Run eslint against the staged files only",
      "steps": [
        {
          "exec": "eslint --fix --no-error-on-unmatched-pattern $(git diff --name-only --relative --staged HEAD . | grep -E '^(src|test)/.*.(ts|tsx)$' | xargs)"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "spawn": "eslint"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation",
      "steps": [
        {
          "exec": "cp ../api/generated/documentation/html2/index.html public/api.html",
          "condition": "[ -f \"../api/generated/documentation/html2/index.html\" ]"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "spawn": "eslint"
        },
        {
          "exec": "react-scripts test --watchAll=false --passWithNoTests"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpm update npm-check-updates"
        },
        {
          "exec": "npm-check-updates --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@storybook/addon-essentials,@storybook/addon-interactions,@storybook/addon-links,@storybook/blocks,@storybook/preset-create-react-app,@storybook/react,@storybook/react-webpack5,@storybook/testing-library,@testing-library/jest-dom,@testing-library/react,@testing-library/react-hooks,@testing-library/user-event,@types/jest,@types/lodash,@types/node,@types/react,@types/react-dom,@types/swagger-ui-react,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,babel-plugin-named-exports-order,eslint-config-prettier,eslint-import-resolver-node,eslint-import-resolver-typescript,eslint-plugin-header,eslint-plugin-import,eslint-plugin-prettier,eslint-plugin-storybook,eslint,msw,msw-storybook-addon,npm-check-updates,prettier,projen,prop-types,react-app-rewired,react-test-renderer,storybook,typescript,webpack,@aws-northstar/ui,@aws/galileo-sdk,@cloudscape-design/board-components,@cloudscape-design/collection-hooks,@cloudscape-design/components,@faker-js/faker,@tanstack/react-query,@tanstack/react-query-devtools,ace-builds,api-typescript-react-query-hooks,aws4fetch,dayjs,immer,jwt-decode,lodash,nanoid,react,react-collapsed,react-dom,react-intersection-observer,react-markdown,react-router-dom,react-scripts,use-immer,usehooks-ts,web-vitals"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @storybook/addon-essentials @storybook/addon-interactions @storybook/addon-links @storybook/blocks @storybook/preset-create-react-app @storybook/react @storybook/react-webpack5 @storybook/testing-library @testing-library/jest-dom @testing-library/react @testing-library/react-hooks @testing-library/user-event @types/jest @types/lodash @types/node @types/react @types/react-dom @types/swagger-ui-react @typescript-eslint/eslint-plugin @typescript-eslint/parser babel-plugin-named-exports-order eslint-config-prettier eslint-import-resolver-node eslint-import-resolver-typescript eslint-plugin-header eslint-plugin-import eslint-plugin-prettier eslint-plugin-storybook eslint msw msw-storybook-addon npm-check-updates prettier projen prop-types react-app-rewired react-test-renderer storybook typescript webpack @aws-northstar/ui @aws/galileo-sdk @cloudscape-design/board-components @cloudscape-design/collection-hooks @cloudscape-design/components @faker-js/faker @tanstack/react-query @tanstack/react-query-devtools ace-builds api-typescript-react-query-hooks aws4fetch dayjs immer jwt-decode lodash nanoid react react-collapsed react-dom react-intersection-observer react-markdown react-router-dom react-scripts use-immer usehooks-ts web-vitals"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")",
    "DISABLE_ESLINT_PLUGIN": "true",
    "NODE_NO_WARNINGS": "1"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
